version: '3.9'
services:
    nginx:
        container_name: my-nginx
        build:
            context: ./docker/nginx
            dockerfile: nginx.Dockerfile
        image: my-nginx:latest
        ports:
            - 127.0.0.1:80:80
        depends_on:
            - app
        volumes:
            - ./docker/nginx/conf/nginx.conf:/etc/nginx/conf.d/default.conf
        command: [nginx-debug, '-g', 'daemon off;']

    app:
        container_name: my-app
        build:
            context: ./docker
            dockerfile: app.Dockerfile
        image: my-app:latest
        depends_on:
            - postgresql
        volumes:
            - ./:/myapp
        hostname: myapp
        command: ['npm', 'run', 'dev']

    postgresql:
        container_name: my-postgresql
        build:
            context: ./docker
            dockerfile: db.Dockerfile
        image: my-postgresql:latest
        ports:
            - 127.0.0.1:9000:5432
        volumes:
            - ./src/infrastructure/datastore/postgresql/initdb:/docker-entrypoint-initdb.d
            - ./src/infrastructure/datastore/postgresql/data:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: my_db
            POSTGRES_USER: root
            POSTGRES_PASSWORD: password
        hostname: postgresql

    adminer:
        container_name: my-adminer
        build:
            context: ./docker
            dockerfile: adminer.Dockerfile
        image: my-adminer:latest
        ports:
            - 8000:8080
        depends_on:
            - postgresql
        environment:
            ADMINER_DEFAULT_DB_HOST: postgresql
            ADMINER_DEFAULT_DB_NAME: my_db
